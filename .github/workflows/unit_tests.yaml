name: Node.js Run tests

on:
  push:
    branches-ignore:
      - master

env:
  NODE_ENV: development
  DATABASE_URL: postgres://as-backend-user:as-backend-password@localhost:6633/as-backend

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: as-backend-user
          POSTGRES_PASSWORD: as-backend-password
          POSTGRES_DB: as-backend
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js local packages
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - run: npm install
      - run: npm run build --if-present
      - run: typeorm migration:run
      - run: npm test
      - run: npm run test:e2e
        env:
          CI: true

