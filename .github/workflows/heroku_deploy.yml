name: Heroku deployment

on:
  push:
    branches:
      - master

env:
  NODE_ENV: development
  DATABASE_URL: postgres://as-backend-user:as-backend-password@localhost/as-backend

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: as-backend-user
          POSTGRES_PASSWORD: as-backend-password
          POSTGRES_DB: as-backend
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js local packages
      uses: actions/cache@v2
      with:
        path: |
          ~/cache
          !~/cache/exclude
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Test the code
      run: |
        npm install
        npm run build --if-present
        npm run typeorm:migrate:run
        npm test
        npm run test:e2e
    - name: Deploy to Heroku
      uses: AkhileshNS/heroku-deploy@v3.0.5
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
